{"version":3,"sources":["js/app.js","js/controllers/auth.js","models/event.js","js/controllers/event.js","models/friend.js","js/controllers/friend.js","models/location.js","js/controllers/location.js","js/controllers/main.js","models/user.js","js/controllers/user.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","$window","submit","signup","register","user","then","res","localStorage","setItem","data","token","go","this","LoginController","User","login","credentials","authenticate","provider","console","log","Event","$resource","id","update","method","EventIndexController","eventIndex","all","query","allEvents","EventShowController","deleteEvent","eventShow","event","_id","remove","get","params","NewEventFormController","createNewEvent","newEventForm","newEvent","activities","push","activities1","activities2","substances","substances1","substances2","whoDisliked","whoLiked","whodisliked","forEach","item","wholiked","positives","split","negatives","save","name","undefined","type","friends","Friend","FriendIndexController","friendIndex","allFriends","FriendShowController","deleteFriend","friendShow","friend","NewFriendFormController","createNewFriend","newFriendForm","newFriend","hobbies","hobbies1","hobbies2","interests","interests1","interests2","contact","likes","dislikes","email","phone","sign","asc","sun","moon","mercury","venus","getPayload","Location","LocationIndexController","locationIndex","allLocations","LocationShowController","locationShow","location","NewLocationFormController","createNewLocation","events","newLocationForm","newLocation","times","opening","closing","MainController","$rootScope","logout","secureState","e","toState","main","menuVisible","message","isAuthenticated","protectedStates","includes","preventDefault","toggleMenu","isLoggedIn","$on","UserFormController","userForm","allies","enemies","$update","UserShowController","userShow","angular","module","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('FriendManagerApp', ['ngAnimate', 'ngResource', 'ui.router', 'satellizer', 'angular-carousel', 'chart.js'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('test', {\n      url: '/test',\n      templateUrl: '/templates/test.html'\n    })\n    .state('login', {\n      url: '/',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('userForm', {\n      url: '/userForm',\n      templateUrl: '/templates/userForm.html',\n      controller: 'UserFormController as userForm'\n    })\n    .state('userShow', {\n      url: '/userShow',\n      templateUrl: '/templates/userShow.html',\n      controller: 'UserShowController as userShow'\n    })\n    .state('newFriendForm', {\n      url: '/newFriendForm',\n      templateUrl: '/templates/newFriendForm.html',\n      controller: 'NewFriendFormController as newFriendForm'\n    })\n    .state('friendIndex', {\n      url: '/friendIndex',\n      templateUrl: '/templates/friendIndex.html',\n      controller: 'FriendIndexController as friendIndex'\n    })\n    .state('friendShow', {\n      url: '/friend/:id',\n      templateUrl: '/templates/friendShow.html',\n      controller: 'FriendShowController as friendShow'\n    })\n    .state('newEventForm', {\n      url: '/newEventForm',\n      templateUrl: '/templates/newEventForm.html',\n      controller: 'NewEventFormController as newEventForm'\n    })\n    .state('eventIndex', {\n      url: '/eventIndex',\n      templateUrl: '/templates/eventIndex.html',\n      controller: 'EventIndexController as eventIndex'\n    })\n    .state('eventShow', {\n      url: '/event/:id',\n      templateUrl: '/templates/eventShow.html',\n      controller: 'EventShowController as eventShow'\n    })\n    .state('newLocationForm', {\n      url: '/newLocationForm',\n      templateUrl: '/templates/newLocationForm.html',\n      controller: 'NewLocationFormController as newLocationForm'\n    })\n    .state('locationIndex', {\n      url: '/locationIndex',\n      templateUrl: '/templates/locationIndex.html',\n      controller: 'LocationIndexController as locationIndex'\n    })\n    .state('locationShow', {\n      url: '/location/:id',\n      templateUrl: '/templates/locationShow.html',\n      controller: 'LocationShowController as locationShow'\n    });\n  $urlRouterProvider.otherwise('/');\n}\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('FriendManagerApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state', '$window'];\nfunction RegisterController($auth, $state, $window) {\n  const register = this;\n\n  function submit() {\n    $auth.signup(register.user)\n      .then((res) => {\n        $window.localStorage.setItem('token', res.data.token);\n        $state.go('userForm');\n      });\n  }\n  register.submit = submit;\n}\n\n\nLoginController.$inject = ['$auth', '$state', 'User'];\nfunction LoginController($auth, $state, User) {\n  const login = this;\n  login.credentials = {};\n  function submit() {\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('test');\n    });\n  }\n\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then((res) => {\n      console.log(res);\n      $state.go('test');\n    });\n  }\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('FriendManagerApp')\n  .factory('Event', Event);\n\nEvent.$inject = ['$resource'];\nfunction Event($resource) {\n  return new $resource('/events/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('FriendManagerApp')\n  .controller('NewEventFormController', NewEventFormController)\n  .controller('EventIndexController', EventIndexController)\n  .controller('EventShowController', EventShowController);\n\n\nEventIndexController.$inject = ['$auth', '$state', 'Event'];\nfunction EventIndexController($auth, $state, Event) {\n  const eventIndex = this;\n\n  eventIndex.all = Event.query((allEvents) => {\n    console.log(allEvents);\n    console.log('all events', eventIndex.all);\n  });\n}\n\nEventShowController.$inject = ['$auth', 'User', '$state', 'Event'];\nfunction EventShowController($auth, User, $state, Event) {\n  const eventShow = this;\n\n  Event.get($state.params, (event) => {\n    eventShow.event = event;\n    console.log('this event', eventShow.event);\n  });\n\n  function deleteEvent() {\n    console.log(eventShow.event._id);\n    console.log('event go bye bye!');\n    Event.remove({ id: eventShow.event._id }, () => {\n      $state.go('eventIndex');\n    });\n  }\n\n  eventShow.deleteEvent = deleteEvent;\n}\n\n\nNewEventFormController.$inject = ['$auth', '$state', 'Event'];\nfunction NewEventFormController($auth, $state, Event) {\n  const newEventForm = this;\n\n  newEventForm.newEvent = {};\n  newEventForm.activities = {\n    name: undefined,\n    type: undefined\n  };\n  newEventForm.activities1 = {\n    name: undefined,\n    type: undefined\n  };\n  newEventForm.activities2 = {\n    name: undefined,\n    type: undefined\n  };\n\n  newEventForm.substances = {\n    name: undefined,\n    type: undefined\n  };\n  newEventForm.substances1 = {\n    name: undefined,\n    type: undefined\n  };\n  newEventForm.substances2 = {\n    name: undefined,\n    type: undefined\n  };\n\n  newEventForm.newEvent.activities = [];\n  newEventForm.newEvent.substances = [];\n\n  newEventForm.newEvent.friends = [];\n  newEventForm.newEvent.wholiked = [];\n  newEventForm.newEvent.whodisliked = [];\n\n  function createNewEvent () {\n\n    newEventForm.newEvent.activities.push(newEventForm.activities, newEventForm.activities1, newEventForm.activities2);\n    newEventForm.newEvent.substances.push(newEventForm.substances, newEventForm.substances1, newEventForm.substances2);\n\n    const whoDisliked = [];\n    const whoLiked = [];\n\n    newEventForm.newEvent.whodisliked.forEach((item) => {\n      if(item) whoDisliked.push(item);\n    });\n\n    newEventForm.newEvent.wholiked.forEach((item) => {\n      if(item) whoLiked.push(item);\n    });\n    newEventForm.newEvent.whodisliked = whoDisliked;\n    newEventForm.newEvent.wholiked = whoLiked;\n\n    if(newEventForm.newEvent.positives) {\n      newEventForm.newEvent.positives = newEventForm.newEvent.positives.split(',');\n    }\n    if(newEventForm.newEvent.negatives) {\n      newEventForm.newEvent.negatives = newEventForm.newEvent.negatives.split(',');\n    }\n\n    console.log('split positives', newEventForm.newEvent.positives);\n    console.log('split negatives', newEventForm.newEvent.negatives);\n\n    console.log('new event', newEventForm.newEvent);\n\n    Event.save(newEventForm.newEvent, () => {\n      $state.go('eventIndex');\n    });\n  }\n\n  newEventForm.submit = createNewEvent;\n}\n","angular.module('FriendManagerApp')\n  .factory('Friend', Friend);\n\nFriend.$inject = ['$resource'];\nfunction Friend($resource) {\n  return new $resource('/friends/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('FriendManagerApp')\n  .controller('FriendIndexController', FriendIndexController)\n  .controller('FriendShowController', FriendShowController)\n  .controller('NewFriendFormController', NewFriendFormController);\n\n\nFriendIndexController.$inject = ['$auth', 'User', '$state', 'Friend'];\nfunction FriendIndexController($auth, User, $state, Friend) {\n  const friendIndex = this;\n\n  friendIndex.all = Friend.query((allFriends) => {\n    console.log(allFriends);\n    console.log('all friends', friendIndex.all);\n  });\n\n  // function deleteFriend(friendId) {\n  //   console.log(friendId);\n  //   console.log('friend go bye bye!');\n  //   Friend.remove(friendId, () => {\n  //     $state.reload('friendIndex');\n  //   });\n  // }\n  //\n  // friendIndex.deleteFriend = deleteFriend;\n\n}\n\nFriendShowController.$inject = ['$auth', 'User', '$state', 'Friend'];\nfunction FriendShowController($auth, User, $state, Friend) {\n  const friendShow = this;\n\n  Friend.get($state.params, (friend) => {\n    friendShow.friend = friend;\n    console.log('this friend', friendShow.friend);\n  });\n\n  function deleteFriend() {\n    console.log(friendShow.friend._id);\n    console.log('friend go bye bye!');\n    Friend.remove({ id: friendShow.friend._id }, () => {\n      $state.go('friendIndex');\n    });\n  }\n\n  friendShow.deleteFriend = deleteFriend;\n\n}\n\n\nNewFriendFormController.$inject = ['$auth', '$state', 'Friend'];\nfunction NewFriendFormController($auth, $state, Friend) {\n  const newFriendForm = this;\n\n  newFriendForm.newFriend = {};\n  newFriendForm.newFriend.hobbies = [];\n  newFriendForm.newFriend.interests = [];\n\n  newFriendForm.contact = {\n    email: undefined,\n    phone: undefined\n  };\n\n  newFriendForm.hobbies = {\n    name: undefined,\n    type: undefined\n  };\n  newFriendForm.interests = {\n    name: undefined,\n    type: undefined\n  };\n  newFriendForm.hobbies1 = {\n    name: undefined,\n    type: undefined\n  };\n  newFriendForm.interests1 = {\n    name: undefined,\n    type: undefined\n  };\n  newFriendForm.hobbies2 = {\n    name: undefined,\n    type: undefined\n  };\n  newFriendForm.interests2 = {\n    name: undefined,\n    type: undefined\n  };\n\n  newFriendForm.sign = {\n    asc: undefined,\n    sun: undefined,\n    moon: undefined,\n    mercury: undefined,\n    venus: undefined\n  };\n\n  newFriendForm.newFriend.user = $auth.getPayload()._id;\n\n  function createNewFriend () {\n\n    newFriendForm.newFriend.hobbies.push(newFriendForm.hobbies, newFriendForm.hobbies1, newFriendForm.hobbies2);\n    newFriendForm.newFriend.interests.push(newFriendForm.interests, newFriendForm.interests1, newFriendForm.interests2);\n    newFriendForm.newFriend.contact = newFriendForm.contact;\n\n    if(newFriendForm.newFriend.likes) {\n      newFriendForm.newFriend.likes = newFriendForm.newFriend.likes.split(',');\n    }\n    if (newFriendForm.newFriend.dislikes) {\n      newFriendForm.newFriend.dislikes = newFriendForm.newFriend.dislikes.split(',');\n    }\n    console.log('split likes', newFriendForm.newFriend.likes);\n    console.log('split dislikes', newFriendForm.newFriend.dislikes);\n\n    console.log('new friend', newFriendForm.newFriend);\n\n    Friend.save(newFriendForm.newFriend, () => {\n      $state.go('friendIndex');\n    });\n  }\n\n\n  newFriendForm.submit = createNewFriend;\n\n}\n","angular.module('FriendManagerApp')\n  .factory('Location', Location);\n\nLocation.$inject = ['$resource'];\nfunction Location($resource) {\n  return new $resource('/locations/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('FriendManagerApp')\n  .controller('NewLocationFormController', NewLocationFormController)\n  .controller('LocationIndexController', LocationIndexController)\n  .controller('LocationShowController', LocationShowController);\n\n\nLocationIndexController.$inject = ['$auth', '$state', 'Location'];\nfunction LocationIndexController($auth, $state, Location) {\n  const locationIndex = this;\n\n  locationIndex.all = Location.query((allLocations) => {\n    console.log(allLocations);\n    console.log('all Locations', locationIndex.all);\n  });\n}\n\nLocationShowController.$inject = ['$auth', 'User', '$state', 'Location'];\nfunction LocationShowController($auth, User, $state, Location) {\n  const locationShow = this;\n\n  Location.get($state.params, (location) => {\n    locationShow.location = location;\n    console.log('this location', locationShow.location);\n  });\n\n}\n\n\nNewLocationFormController.$inject = ['$auth', '$state', 'Location'];\nfunction NewLocationFormController($auth, $state, Location) {\n  const newLocationForm = this;\n\n  newLocationForm.newLocation = {};\n  newLocationForm.times = {\n    opening: undefined,\n    closing: undefined\n  };\n\n  newLocationForm.newLocation.friends = [];\n  newLocationForm.newLocation.events = [];\n  newLocationForm.newLocation.wholiked = [];\n  newLocationForm.newLocation.whodisliked = [];\n\n  function createNewLocation () {\n\n    const whoDisliked = [];\n    const whoLiked = [];\n    const friends = [];\n    const events = [];\n\n    newLocationForm.newLocation.whodisliked.forEach((item) => {\n      if(item) whoDisliked.push(item);\n    });\n\n    newLocationForm.newLocation.wholiked.forEach((item) => {\n      if(item) whoLiked.push(item);\n    });\n\n    newLocationForm.newLocation.friends.forEach((item) => {\n      if(item) friends.push(item);\n    });\n\n    newLocationForm.newLocation.events.forEach((item) => {\n      if(item) events.push(item);\n    });\n\n    newLocationForm.newLocation.whodisliked = whoDisliked;\n    newLocationForm.newLocation.wholiked = whoLiked;\n    newLocationForm.newLocation.friends = friends;\n    newLocationForm.newLocation.events = events;\n\n    newLocationForm.newLocation.times = newLocationForm.times;\n\n    if(newLocationForm.newLocation.positives) {\n      newLocationForm.newLocation.positives = newLocationForm.newLocation.positives.split(',');\n    }\n    if(newLocationForm.newLocation.negatives) {\n      newLocationForm.newLocation.negatives = newLocationForm.newLocation.negatives.split(',');\n    }\n\n    console.log('split positives', newLocationForm.newLocation.positives);\n    console.log('split negatives', newLocationForm.newLocation.negatives);\n\n\n\n    console.log('new location', newLocationForm.newLocation);\n\n    Location.save(newLocationForm.newLocation, () => {\n      $state.go('locationIndex');\n    });\n  }\n\n  newLocationForm.submit = createNewLocation;\n}\n","angular.module('FriendManagerApp')\n  .controller('MainController', MainController);\n\n\nMainController.$inject = ['$auth', '$state', '$rootScope', 'User', 'Friend', 'Event'];\nfunction MainController($auth, $state, $rootScope, User, Friend, Event) {\n  const main = this;\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n  main.menuVisible = false;\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('friendIndex');\n    });\n  }\n\n\n  //current user\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    main.user = user;\n    console.log('current user', main.user);\n  });\n\n  console.log('logged in?', main.isLoggedIn);\n\n  //all friends & Events\n  main.allFriends = Friend.query();\n  main.allEvents = Event.query();\n\n  const protectedStates = [];\n  function secureState(e, toState) {\n    main.menuVisible = false;\n    main.message = null;\n    console.log(toState, e);\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      main.message = 'You must be logged in to go there!';\n      $state.go('login');\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n  main.logout = logout;\n\n  function toggleMenu() {\n    main.menuVisible = main.menuVisible ? false : true;\n  }\n\n  main.toggleMenu = toggleMenu;\n}\n","angular.module('FriendManagerApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('FriendManagerApp')\n  .controller('UserFormController', UserFormController)\n  .controller('UserShowController', UserShowController);\n  \n\nUserFormController.$inject = ['$auth', 'User', '$state'];\nfunction UserFormController($auth, User, $state) {\n  const userForm = this;\n\n  //make objects\n  userForm.hobbies = {\n    name: undefined,\n    type: undefined\n  };\n  userForm.interests = {\n    name: undefined,\n    type: undefined\n  };\n  userForm.sign = {\n    asc: undefined,\n    sun: undefined,\n    moon: undefined,\n    mercury: undefined,\n    venus: undefined\n  };\n\n  userForm.allies = [];\n  userForm.enemies = [];\n\n  userForm.user = User.get({ id: $auth.getPayload()._id });\n\n  function submit() {\n     // console.log('pre update', userForm.user);\n\n    //push objects to array\n    userForm.user.hobbies.push(userForm.hobbies);\n    userForm.user.interests.push(userForm.interests);\n    userForm.user.allies = userForm.allies;\n    userForm.user.allies = userForm.enemies;\n\n    userForm.user.likes = userForm.user.likes.split(',');\n    userForm.user.dislikes = userForm.user.dislikes.split(',');\n\n    const allies = [];\n    const enemies = [];\n\n    userForm.user.allies.forEach((item) => {\n      if(item) allies.push(item);\n    });\n\n    userForm.user.enemies.forEach((item) => {\n      if(item) enemies.push(item);\n    });\n    userForm.user.allies = allies;\n    userForm.user.enemies = enemies;\n\n\n    console.log('data to be saved', userForm.user, 'user object hobbies', userForm.user.hobbies, 'user object interests', userForm.user.interests, 'user object sign', userForm.user.sign);\n\n    userForm.user.$update(() => {\n      console.log('post update your data', userForm.user);\n      $state.go('userShow');\n    });\n  }\n\n  userForm.submit = submit;\n\n}\n\n\nUserShowController.$inject = ['$auth', '$state', '$rootScope', 'User'];\nfunction UserShowController($auth, $state, $rootScope, User) {\n  const userShow = this;\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    userShow.user = user;\n    console.log('showing user', userShow.user);\n  });\n\n}\n"]}