{"version":3,"sources":["js/app.js","js/controllers/auth.js","models/event.js","js/controllers/event.js","models/friend.js","js/controllers/friend.js","models/location.js","js/controllers/main.js","models/user.js","js/controllers/user.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","$window","submit","signup","register","user","then","res","localStorage","setItem","data","token","go","this","LoginController","User","login","credentials","authenticate","provider","console","log","Event","$resource","id","update","method","NewEventFormController","createNewEvent","newEventForm","newEvent","friends","save","activities","name","undefined","type","Friend","FriendIndexController","friendIndex","all","query","FriendShowController","friendShow","get","params","friend","NewFriendFormController","createNewFriend","newFriendForm","newFriend","hobbies","push","interests","contact","email","phone","sign","asc","sun","moon","mercury","venus","getPayload","_id","Location","MainController","$rootScope","logout","secureState","e","toState","main","menuVisible","message","isAuthenticated","protectedStates","includes","preventDefault","toggleMenu","isLoggedIn","allFriends","$on","UserFormController","userForm","$update","UserShowController","userShow","angular","module","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('FriendManagerApp', ['ngAnimate', 'ngResource', 'ui.router', 'satellizer', 'angular-carousel', 'chart.js'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('test', {\n      url: '/test',\n      templateUrl: '/templates/test.html'\n    })\n    .state('login', {\n      url: '/',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('userForm', {\n      url: '/userForm',\n      templateUrl: '/templates/userForm.html',\n      controller: 'UserFormController as userForm'\n    })\n    .state('userShow', {\n      url: '/userShow',\n      templateUrl: '/templates/userShow.html',\n      controller: 'UserShowController as userShow'\n    })\n    .state('newFriendForm', {\n      url: '/newFriendForm',\n      templateUrl: '/templates/newFriendForm.html',\n      controller: 'NewFriendFormController as newFriendForm'\n    })\n    .state('friendIndex', {\n      url: '/friendIndex',\n      templateUrl: '/templates/friendIndex.html',\n      controller: 'FriendIndexController as friendIndex'\n    })\n    .state('friendShow', {\n      url: '/friend/:id',\n      templateUrl: '/templates/friendShow.html',\n      controller: 'FriendShowController as friendShow'\n    })\n    .state('newEventForm', {\n      url: '/newEventForm',\n      templateUrl: '/templates/newEventForm.html',\n      controller: 'NewEventFormController as newEventForm'\n    })\n    .state('eventIndex', {\n      url: '/eventIndex',\n      templateUrl: '/templates/eventIndex.html',\n      controller: 'EventIndexController as eventIndex'\n    });\n  $urlRouterProvider.otherwise('/');\n}\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('FriendManagerApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state', '$window'];\nfunction RegisterController($auth, $state, $window) {\n  const register = this;\n\n  function submit() {\n    $auth.signup(register.user)\n      .then((res) => {\n        $window.localStorage.setItem('token', res.data.token);\n        $state.go('userForm');\n      });\n  }\n  register.submit = submit;\n}\n\n\nLoginController.$inject = ['$auth', '$state', 'User'];\nfunction LoginController($auth, $state, User) {\n  const login = this;\n  login.credentials = {};\n  function submit() {\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('test');\n    });\n  }\n\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then((res) => {\n      console.log(res);\n      $state.go('test');\n    });\n  }\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('FriendManagerApp')\n  .factory('Event', Event);\n\nEvent.$inject = ['$resource'];\nfunction Event($resource) {\n  return new $resource('/events/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('FriendManagerApp')\n  .controller('NewEventFormController', NewEventFormController);\n\n\nNewEventFormController.$inject = ['$auth', '$state', 'Event'];\nfunction NewEventFormController($auth, $state, Event) {\n  const newEventForm = this;\n\n  newEventForm.newEvent = {};\n  newEventForm.activities = {\n    name: undefined,\n    type: undefined\n  };\n  newEventForm.newEvent.activities = [];\n\n  newEventForm.newEvent.friends = [];\n\n\n\n  function createNewEvent () {\n\n    console.log('new event', newEventForm.newEvent, 'friends', newEventForm.newEvent.friends);\n\n    Event.save(newEventForm.newEvent, () => {\n      $state.go('test');\n    });\n  }\n\n\n  newEventForm.submit = createNewEvent;\n\n}\n","angular.module('FriendManagerApp')\n  .factory('Friend', Friend);\n\nFriend.$inject = ['$resource'];\nfunction Friend($resource) {\n  return new $resource('/friends/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('FriendManagerApp')\n  .controller('FriendIndexController', FriendIndexController)\n  .controller('FriendShowController', FriendShowController)\n  .controller('NewFriendFormController', NewFriendFormController);\n\n\nFriendIndexController.$inject = ['$auth', 'User', '$state', 'Friend'];\nfunction FriendIndexController($auth, User, $state, Friend) {\n  const friendIndex = this;\n\n  friendIndex.all = Friend.query();\n  console.log('all friends', friendIndex.all);\n}\n\nFriendShowController.$inject = ['$auth', 'User', '$state', 'Friend'];\nfunction FriendShowController($auth, User, $state, Friend) {\n  const friendShow = this;\n\n  Friend.get($state.params, (friend) => {\n    friendShow.friend = friend;\n    console.log('this friend', friendShow.friend);\n  });\n\n}\n\n\nNewFriendFormController.$inject = ['$auth', '$state', 'Friend'];\nfunction NewFriendFormController($auth, $state, Friend) {\n  const newFriendForm = this;\n\n  newFriendForm.newFriend = {};\n  newFriendForm.newFriend.hobbies = [];\n  newFriendForm.newFriend.interests = [];\n\n  newFriendForm.contact = {\n    email: undefined,\n    phone: undefined\n  };\n\n  newFriendForm.hobbies = {\n    name: undefined,\n    type: undefined\n  };\n  newFriendForm.interests = {\n    name: undefined,\n    type: undefined\n  };\n  newFriendForm.sign = {\n    asc: undefined,\n    sun: undefined,\n    moon: undefined,\n    mercury: undefined,\n    venus: undefined\n  };\n\n  newFriendForm.newFriend.user = $auth.getPayload()._id;\n\n  function createNewFriend () {\n\n    newFriendForm.newFriend.hobbies.push(newFriendForm.hobbies);\n    newFriendForm.newFriend.interests.push(newFriendForm.interests);\n    newFriendForm.newFriend.contact = newFriendForm.contact;\n\n    console.log('new friend', newFriendForm.newFriend);\n\n    Friend.save(newFriendForm.newFriend, () => {\n      $state.go('friendIndex');\n    });\n  }\n\n\n  newFriendForm.submit = createNewFriend;\n\n}\n","angular.module('FriendManagerApp')\n  .factory('Location', Location);\n\nLocation.$inject = ['$resource'];\nfunction Location($resource) {\n  return new $resource('/locations/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('FriendManagerApp')\n  .controller('MainController', MainController);\n\n\nMainController.$inject = ['$auth', '$state', '$rootScope', 'User', 'Friend'];\nfunction MainController($auth, $state, $rootScope, User, Friend) {\n  const main = this;\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n  main.menuVisible = false;\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('friendIndex');\n    });\n  }\n\n\n  //current user\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    main.user = user;\n    console.log('current user', main.user);\n  });\n\n  //all friends\n  main.allFriends = Friend.query();\n\n  const protectedStates = [];\n  function secureState(e, toState) {\n    main.menuVisible = false;\n    main.message = null;\n    console.log(toState, e);\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      main.message = 'You must be logged in to go there!';\n      $state.go('login');\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n  main.logout = logout;\n\n  function toggleMenu() {\n    main.menuVisible = main.menuVisible ? false : true;\n  }\n\n  main.toggleMenu = toggleMenu;\n}\n","angular.module('FriendManagerApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('FriendManagerApp')\n  .controller('UserFormController', UserFormController)\n  .controller('UserShowController', UserShowController);\n  // .controller('UserDataController', UserDataController);\n\n\n\nUserFormController.$inject = ['$auth', 'User', '$state'];\nfunction UserFormController($auth, User, $state) {\n  const userForm = this;\n\n  //make objects\n  userForm.hobbies = {\n    name: undefined,\n    type: undefined\n  };\n  userForm.interests = {\n    name: undefined,\n    type: undefined\n  };\n  userForm.sign = {\n    asc: undefined,\n    sun: undefined,\n    moon: undefined,\n    mercury: undefined,\n    venus: undefined\n  };\n\n  userForm.user = User.get({ id: $auth.getPayload()._id });\n\n  function submit() {\n     // console.log('pre update', userForm.user);\n\n    //push objects to array\n    userForm.user.hobbies.push(userForm.hobbies);\n    userForm.user.interests.push(userForm.interests);\n    console.log('data to be saved', userForm.user, 'user object hobbies', userForm.user.hobbies, 'user object interests', userForm.user.interests, 'user object sign', userForm.user.sign);\n\n    userForm.user.$update(() => {\n      console.log('post update your data', userForm.user);\n      $state.go('userShow');\n    });\n  }\n\n  userForm.submit = submit;\n\n}\n\n\nUserShowController.$inject = ['$auth', '$state', '$rootScope', 'User'];\nfunction UserShowController($auth, $state, $rootScope, User) {\n  const userShow = this;\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    userShow.user = user;\n    console.log('showing user', userShow.user);\n  });\n\n}\n"]}