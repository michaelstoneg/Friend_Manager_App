{"version":3,"sources":["js/app.js","js/controllers/auth.js","models/event.js","models/friend.js","models/location.js","js/controllers/main.js","models/user.js","js/controllers/user.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","$window","submit","signup","register","user","then","res","localStorage","setItem","data","token","go","this","LoginController","User","login","credentials","authenticate","provider","console","log","Event","$resource","id","update","method","Friend","Location","MainController","$rootScope","logout","secureState","e","toState","main","menuVisible","message","isAuthenticated","protectedStates","includes","name","preventDefault","toggleMenu","isLoggedIn","get","getPayload","_id","$on","UserFormController","userForm","hobbies","push","interests","sign","$update","undefined","type","asc","sun","moon","mercury","venus","UserShowController","userShow","angular","module","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('FriendManagerApp', ['ngAnimate', 'ngResource', 'ui.router', 'satellizer', 'angular-carousel', 'chart.js'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('test', {\n      url: '/test',\n      templateUrl: '/templates/test.html'\n    })\n    .state('login', {\n      url: '/',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('userForm', {\n      url: '/userForm',\n      templateUrl: '/templates/userForm.html',\n      controller: 'UserFormController as userForm'\n    })\n    .state('userShow', {\n      url: '/userShow',\n      templateUrl: '/templates/userShow.html',\n      controller: 'UserShowController as userShow'\n    })\n    .state('friendIndex', {\n      url: '/friendIndex',\n      templateUrl: '/templates/friendIndex.html',\n      controller: 'friendController as friendIndex'\n    });\n  $urlRouterProvider.otherwise('/');\n}\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('FriendManagerApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state', '$window'];\nfunction RegisterController($auth, $state, $window) {\n  const register = this;\n\n  function submit() {\n    $auth.signup(register.user)\n      .then((res) => {\n        $window.localStorage.setItem('token', res.data.token);\n        $state.go('userForm');\n      });\n  }\n  register.submit = submit;\n}\n\n\nLoginController.$inject = ['$auth', '$state', 'User'];\nfunction LoginController($auth, $state, User) {\n  const login = this;\n  login.credentials = {};\n  function submit() {\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('test');\n    });\n  }\n\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then((res) => {\n      console.log(res);\n      $state.go('test');\n    });\n  }\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('FriendManagerApp')\n  .factory('Event', Event);\n\nEvent.$inject = ['$resource'];\nfunction Event($resource) {\n  return new $resource('/events/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('FriendManagerApp')\n  .factory('Friend', Friend);\n\nFriend.$inject = ['$resource'];\nfunction Friend($resource) {\n  return new $resource('/friends/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('FriendManagerApp')\n  .factory('Location', Location);\n\nLocation.$inject = ['$resource'];\nfunction Location($resource) {\n  return new $resource('/locations/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('FriendManagerApp')\n  .controller('MainController', MainController);\n\n\nMainController.$inject = ['$auth', '$state', '$rootScope', 'User'];\nfunction MainController($auth, $state, $rootScope, User) {\n  const main = this;\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n  main.menuVisible = false;\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('friendIndex');\n    });\n  }\n\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    main.user = user;\n    console.log('user', main.user);\n  });\n\n  const protectedStates = ['friendIndex'];\n  function secureState(e, toState) {\n    main.menuVisible = false;\n    main.message = null;\n    console.log(toState, e);\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      main.message = 'You must be logged in to go there!';\n      $state.go('login');\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n  main.logout = logout;\n\n  function toggleMenu() {\n    main.menuVisible = main.menuVisible ? false : true;\n  }\n  main.toggleMenu = toggleMenu;\n}\n","angular.module('FriendManagerApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('FriendManagerApp')\n  .controller('UserFormController', UserFormController)\n  .controller('UserShowController', UserShowController);\n  // .controller('UserDataController', UserDataController);\n\n\n\nUserFormController.$inject = ['$auth', 'User', '$state'];\nfunction UserFormController($auth, User, $state) {\n  const userForm = this;\n\n  //make objects\n  userForm.hobbies = {\n    name: undefined,\n    type: undefined\n  };\n  userForm.interests = {\n    name: undefined,\n    type: undefined\n  };\n  userForm.sign = {\n    asc: undefined,\n    sun: undefined,\n    moon: undefined,\n    mercury: undefined,\n    venus: undefined\n  };\n\n  userForm.user = User.get({ id: $auth.getPayload()._id });\n\n  function submit() {\n     // console.log('pre update', userForm.user);\n\n    //push objects to array\n    userForm.user.hobbies.push(userForm.hobbies);\n    userForm.user.interests.push(userForm.interests);\n    userForm.user.sign.push(userForm.sign);\n    console.log('data to be saved', userForm.user, 'user object hobbies', userForm.user.hobbies, 'user object interests', userForm.user.interests, 'user object sign', userForm.user.sign);\n\n    userForm.user.$update(() => {\n      console.log('post update your data', userForm.user);\n      $state.go('userShow');\n    });\n  }\n\n  userForm.submit = submit;\n\n}\n\n\nUserShowController.$inject = ['$auth', '$state', '$rootScope', 'User'];\nfunction UserShowController($auth, $state, $rootScope, User) {\n  const userShow = this;\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    userShow.user = user;\n    console.log('showing user', userShow.user);\n  });\n\n}\n"]}