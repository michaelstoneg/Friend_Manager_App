{"version":3,"sources":["js/app.js","js/controllers/auth.js","models/event.js","models/friend.js","js/controllers/main.js","models/user.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","$window","submit","signup","register","user","then","res","localStorage","setItem","data","token","go","this","LoginController","User","login","credentials","get","id","getPayload","_id","console","log","isFirstTime","authenticate","provider","Event","$resource","update","method","Friend","MainController","$rootScope","logout","secureState","e","toState","main","menuVisible","message","isAuthenticated","protectedStates","includes","name","preventDefault","toggleMenu","isLoggedIn","$on","angular","module","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('FriendManagerApp', ['ngAnimate', 'ngResource', 'ui.router', 'satellizer', 'angular-carousel', 'chart.js'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('test', {\n      url: '/test',\n      templateUrl: '/templates/test.html'\n    })\n    .state('login', {\n      url: '/',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('friendIndex', {\n      url: '/friendIndex',\n      templateUrl: '/templates/friendIndex.html',\n      controller: 'friendController as friendIndex'\n    });\n  $urlRouterProvider.otherwise('/');\n}\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('FriendManagerApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state', '$window'];\nfunction RegisterController($auth, $state, $window) {\n  const register = this;\n\n  function submit() {\n    $auth.signup(register.user)\n      .then((res) => {\n        $window.localStorage.setItem('token', res.data.token);\n        $state.go('test');\n      });\n  }\n  register.submit = submit;\n}\n\n\nLoginController.$inject = ['$auth', '$state', 'User'];\nfunction LoginController($auth, $state, User) {\n  const login = this;\n  login.credentials = {};\n  function submit() {\n    $auth.login(login.credentials)\n    .then(() => {\n\n      User.get({ id: $auth.getPayload()._id }, (user) => {\n        login.user = user;\n        console.log('you', login.user);\n        console.log('is this your first time', login.user.isFirstTime);\n\n        if(login.user.isFirstTime) {\n          $state.go('test');\n        }\n      });\n    });\n  }\n\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then((res) => {\n      console.log(res);\n      $state.go('test');\n    });\n  }\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('FriendManagerApp')\n  .factory('Event', Event);\n\nEvent.$inject = ['$resource'];\nfunction Event($resource) {\n  return new $resource('/events/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('FriendManagerApp')\n  .factory('Friend', Friend);\n\nFriend.$inject = ['$resource'];\nfunction Friend($resource) {\n  return new $resource('/friends/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('FriendManagerApp')\n  .controller('MainController', MainController);\n\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n  main.menuVisible = false;\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('friendIndex');\n    });\n  }\n  const protectedStates = ['friendIndex'];\n  function secureState(e, toState) {\n    main.menuVisible = false;\n    main.message = null;\n    console.log(toState, e);\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      main.message = 'You must be logged in to go there!';\n      $state.go('login');\n    }\n  }\n  $rootScope.$on('$stateChangeStart', secureState);\n  main.logout = logout;\n\n  function toggleMenu() {\n    main.menuVisible = main.menuVisible ? false : true;\n  }\n  main.toggleMenu = toggleMenu;\n}\n","angular.module('FriendManagerApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}