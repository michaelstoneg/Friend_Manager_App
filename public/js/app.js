"use strict";function Router(e,t){e.state("test",{url:"/test",templateUrl:"/templates/test.html"}).state("login",{url:"/",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("userForm",{url:"/userForm",templateUrl:"/templates/userForm.html",controller:"UserFormController as userForm"}).state("userShow",{url:"/userShow",templateUrl:"/templates/userShow.html",controller:"UserShowController as userShow"}).state("friendIndex",{url:"/friendIndex",templateUrl:"/templates/friendIndex.html",controller:"friendController as friendIndex"}),t.otherwise("/")}function Auth(e){e.loginUrl="/login",e.signupUrl="/register",e.tokenPrefix=""}function RegisterController(e,t,r){function o(){e.signup(n.user).then(function(e){r.localStorage.setItem("token",e.data.token),t.go("userForm")})}var n=this;n.submit=o}function LoginController(e,t,r){function o(){e.login(i.credentials).then(function(){t.go("test")})}function n(r){e.authenticate(r).then(function(e){console.log(e),t.go("test")})}var i=this;i.credentials={},i.submit=o,i.authenticate=n}function Event(e){return new e("/events/:id",{id:"@_id"},{update:{method:"PUT"}})}function Friend(e){return new e("/friends/:id",{id:"@_id"},{update:{method:"PUT"}})}function Location(e){return new e("/locations/:id",{id:"@_id"},{update:{method:"PUT"}})}function MainController(e,t,r,o){function n(){e.logout().then(function(){t.go("friendIndex")})}function i(r,o){l.menuVisible=!1,l.message=null,console.log(o,r),!e.isAuthenticated()&&u.includes(o.name)&&(r.preventDefault(),l.message="You must be logged in to go there!",t.go("login"))}function s(){l.menuVisible=!l.menuVisible}var l=this;l.isLoggedIn=e.isAuthenticated,l.message=null,l.menuVisible=!1,o.get({id:e.getPayload()._id},function(e){l.user=e,console.log("user",l.user)});var u=["friendIndex"];r.$on("$stateChangeStart",i),l.logout=n,l.toggleMenu=s}function User(e){return new e("/users/:id",{id:"@_id"},{update:{method:"PUT"}})}function UserFormController(e,t,r){function o(){n.user.hobbies.push(n.hobbies),n.user.interests.push(n.interests),n.user.sign.push(n.sign),console.log("data to be saved",n.user,"user object hobbies",n.user.hobbies,"user object interests",n.user.interests,"user object sign",n.user.sign),n.user.$update(function(){console.log("post update your data",n.user),r.go("userShow")})}var n=this;n.hobbies={name:void 0,type:void 0},n.interests={name:void 0,type:void 0},n.sign={asc:void 0,sun:void 0,moon:void 0,mercury:void 0,venus:void 0},n.user=t.get({id:e.getPayload()._id}),n.submit=o}function UserShowController(e,t,r,o){var n=this;o.get({id:e.getPayload()._id},function(e){n.user=e,console.log("showing user",n.user)})}angular.module("FriendManagerApp",["ngAnimate","ngResource","ui.router","satellizer","angular-carousel","chart.js"]).config(Router).config(Auth),Router.$inject=["$stateProvider","$urlRouterProvider"],Auth.$inject=["$authProvider"],angular.module("FriendManagerApp").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state","$window"],LoginController.$inject=["$auth","$state","User"],angular.module("FriendManagerApp").factory("Event",Event),Event.$inject=["$resource"],angular.module("FriendManagerApp").factory("Friend",Friend),Friend.$inject=["$resource"],angular.module("FriendManagerApp").factory("Location",Location),Location.$inject=["$resource"],angular.module("FriendManagerApp").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope","User"],angular.module("FriendManagerApp").factory("User",User),User.$inject=["$resource"],angular.module("FriendManagerApp").controller("UserFormController",UserFormController).controller("UserShowController",UserShowController),UserFormController.$inject=["$auth","User","$state"],UserShowController.$inject=["$auth","$state","$rootScope","User"];
//# sourceMappingURL=app.js.map
