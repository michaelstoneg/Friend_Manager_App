"use strict";function Router(e,r){e.state("test",{url:"/test",templateUrl:"/templates/test.html"}).state("login",{url:"/",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("userForm",{url:"/userForm",templateUrl:"/templates/userForm.html",controller:"UserFormController as userForm"}).state("userShow",{url:"/userShow",templateUrl:"/templates/userShow.html",controller:"UserShowController as userShow"}).state("newFriendForm",{url:"/newFriendForm",templateUrl:"/templates/newFriendForm.html",controller:"NewFriendFormController as newFriendForm"}).state("friendIndex",{url:"/friendIndex",templateUrl:"/templates/friendIndex.html",controller:"FriendIndexController as friendIndex"}),r.otherwise("/")}function Auth(e){e.loginUrl="/login",e.signupUrl="/register",e.tokenPrefix=""}function RegisterController(e,r,t){function n(){e.signup(o.user).then(function(e){t.localStorage.setItem("token",e.data.token),r.go("userForm")})}var o=this;o.submit=n}function LoginController(e,r,t){function n(){e.login(i.credentials).then(function(){r.go("test")})}function o(t){e.authenticate(t).then(function(e){console.log(e),r.go("test")})}var i=this;i.credentials={},i.submit=n,i.authenticate=o}function Event(e){return new e("/events/:id",{id:"@_id"},{update:{method:"PUT"}})}function Friend(e){return new e("/friends/:id",{id:"@_id"},{update:{method:"PUT"}})}function FriendIndexController(e,r,t,n){var o=this;o.index=n.query(),console.log("all friends",o.index)}function NewFriendFormController(e,r,t){function n(){console.log("data to be saved",o.newFriend,"new friend user",o.newFriend.user),t.save(o.newFriend,function(){o.newFriend={},r.go("friendIndex")})}var o=this;o.newFriend={},o.newFriend.user=e.getPayload()._id,o.submit=n}function Location(e){return new e("/locations/:id",{id:"@_id"},{update:{method:"PUT"}})}function MainController(e,r,t,n){function o(){e.logout().then(function(){r.go("friendIndex")})}function i(t,n){s.menuVisible=!1,s.message=null,console.log(n,t),!e.isAuthenticated()&&u.includes(n.name)&&(t.preventDefault(),s.message="You must be logged in to go there!",r.go("login"))}function l(){s.menuVisible=!s.menuVisible}var s=this;s.isLoggedIn=e.isAuthenticated,s.message=null,s.menuVisible=!1,n.get({id:e.getPayload()._id},function(e){s.user=e,console.log("current user",s.user)});var u=["friendIndex"];t.$on("$stateChangeStart",i),s.logout=o,s.toggleMenu=l}function User(e){return new e("/users/:id",{id:"@_id"},{update:{method:"PUT"}})}function UserFormController(e,r,t){function n(){o.user.hobbies.push(o.hobbies),o.user.interests.push(o.interests),o.user.sign.push(o.sign),console.log("data to be saved",o.user,"user object hobbies",o.user.hobbies,"user object interests",o.user.interests,"user object sign",o.user.sign),o.user.$update(function(){console.log("post update your data",o.user),t.go("userShow")})}var o=this;o.hobbies={name:void 0,type:void 0},o.interests={name:void 0,type:void 0},o.sign={asc:void 0,sun:void 0,moon:void 0,mercury:void 0,venus:void 0},o.user=r.get({id:e.getPayload()._id}),o.submit=n}function UserShowController(e,r,t,n){var o=this;n.get({id:e.getPayload()._id},function(e){o.user=e,console.log("showing user",o.user)})}angular.module("FriendManagerApp",["ngAnimate","ngResource","ui.router","satellizer","angular-carousel","chart.js"]).config(Router).config(Auth),Router.$inject=["$stateProvider","$urlRouterProvider"],Auth.$inject=["$authProvider"],angular.module("FriendManagerApp").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state","$window"],LoginController.$inject=["$auth","$state","User"],angular.module("FriendManagerApp").factory("Event",Event),Event.$inject=["$resource"],angular.module("FriendManagerApp").factory("Friend",Friend),Friend.$inject=["$resource"],angular.module("FriendManagerApp").controller("FriendIndexController",FriendIndexController).controller("NewFriendFormController",NewFriendFormController),FriendIndexController.$inject=["$auth","User","$state","Friend"],NewFriendFormController.$inject=["$auth","$state","Friend"],angular.module("FriendManagerApp").factory("Location",Location),Location.$inject=["$resource"],angular.module("FriendManagerApp").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope","User"],angular.module("FriendManagerApp").factory("User",User),User.$inject=["$resource"],angular.module("FriendManagerApp").controller("UserFormController",UserFormController).controller("UserShowController",UserShowController),UserFormController.$inject=["$auth","User","$state"],UserShowController.$inject=["$auth","$state","$rootScope","User"];
//# sourceMappingURL=app.js.map
