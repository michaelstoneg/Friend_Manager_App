"use strict";function Router(e,n){e.state("test",{url:"/test",templateUrl:"/templates/test.html"}).state("login",{url:"/",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("userForm",{url:"/userForm",templateUrl:"/templates/userForm.html",controller:"UserFormController as userForm"}).state("userShow",{url:"/userShow",templateUrl:"/templates/userShow.html",controller:"UserShowController as userShow"}).state("newFriendForm",{url:"/newFriendForm",templateUrl:"/templates/newFriendForm.html",controller:"NewFriendFormController as newFriendForm"}).state("friendIndex",{url:"/friendIndex",templateUrl:"/templates/friendIndex.html",controller:"FriendIndexController as friendIndex"}).state("friendShow",{url:"/friend/:id",templateUrl:"/templates/friendShow.html",controller:"FriendShowController as friendShow"}).state("newEventForm",{url:"/newEventForm",templateUrl:"/templates/newEventForm.html",controller:"NewEventFormController as newEventForm"}).state("eventIndex",{url:"/eventIndex",templateUrl:"/templates/eventIndex.html",controller:"EventIndexController as eventIndex"}).state("eventShow",{url:"/event/:id",templateUrl:"/templates/eventShow.html",controller:"EventShowController as eventShow"}).state("newLocationForm",{url:"/newLocationForm",templateUrl:"/templates/newLocationForm.html",controller:"NewLocationFormController as newLocationForm"}).state("locationIndex",{url:"/locationIndex",templateUrl:"/templates/locationIndex.html",controller:"LocationIndexController as locationIndex"}).state("locationShow",{url:"/location/:id",templateUrl:"/templates/locationShow.html",controller:"LocationShowController as locationShow"}),n.otherwise("/")}function Auth(e){e.loginUrl="/login",e.signupUrl="/register",e.tokenPrefix=""}function RegisterController(e,n,t){function o(){e.signup(r.user).then(function(e){t.localStorage.setItem("token",e.data.token),n.go("userForm")})}var r=this;r.submit=o}function LoginController(e,n,t){function o(){e.login(i.credentials).then(function(){n.go("test")})}function r(t){e.authenticate(t).then(function(e){console.log(e),n.go("test")})}var i=this;i.credentials={},i.submit=o,i.authenticate=r}function Event(e){return new e("/events/:id",{id:"@_id"},{update:{method:"PUT"}})}function EventIndexController(e,n,t){var o=this;o.all=t.query(),console.log("all events",o.all)}function EventShowController(e,n,t,o){var r=this;o.get(t.params,function(e){r.event=e,console.log("this event",r.event)})}function NewEventFormController(e,n,t){function o(){r.newEvent.activities.push(r.activities,r.activities1,r.activities2),r.newEvent.substances.push(r.substances,r.substances1,r.substances2);var e=[],o=[];r.newEvent.whodisliked.forEach(function(n){n&&e.push(n)}),r.newEvent.wholiked.forEach(function(e){e&&o.push(e)}),r.newEvent.whodisliked=e,r.newEvent.wholiked=o,r.newEvent.positives.split(","),r.newEvent.negatives.split(","),console.log("split positives",r.newEvent.positives),console.log("split negatives",r.newEvent.negatives),console.log("new event",r.newEvent),t.save(r.newEvent,function(){n.go("eventIndex")})}var r=this;r.newEvent={},r.activities={name:void 0,type:void 0},r.activities1={name:void 0,type:void 0},r.activities2={name:void 0,type:void 0},r.substances={name:void 0,type:void 0},r.substances1={name:void 0,type:void 0},r.substances2={name:void 0,type:void 0},r.newEvent.activities=[],r.newEvent.substances=[],r.newEvent.friends=[],r.newEvent.wholiked=[],r.newEvent.whodisliked=[],r.submit=o}function Friend(e){return new e("/friends/:id",{id:"@_id"},{update:{method:"PUT"}})}function FriendIndexController(e,n,t,o){var r=this;r.all=o.query(),console.log("all friends",r.all)}function FriendShowController(e,n,t,o){var r=this;o.get(t.params,function(e){r.friend=e,console.log("this friend",r.friend)})}function NewFriendFormController(e,n,t){function o(){r.newFriend.hobbies.push(r.hobbies,r.hobbies1,r.hobbies2),r.newFriend.interests.push(r.interests,r.interests1,r.interests2),r.newFriend.contact=r.contact,r.newFriend.likes=r.newFriend.likes.split(","),r.newFriend.dislikes=r.newFriend.dislikes.split(","),console.log("new friend",r.newFriend),t.save(r.newFriend,function(){n.go("friendIndex")})}var r=this;r.newFriend={},r.newFriend.hobbies=[],r.newFriend.interests=[],r.contact={email:void 0,phone:void 0},r.hobbies={name:void 0,type:void 0},r.interests={name:void 0,type:void 0},r.hobbies1={name:void 0,type:void 0},r.interests1={name:void 0,type:void 0},r.hobbies2={name:void 0,type:void 0},r.interests2={name:void 0,type:void 0},r.sign={asc:void 0,sun:void 0,moon:void 0,mercury:void 0,venus:void 0},r.newFriend.user=e.getPayload()._id,r.submit=o}function Location(e){return new e("/locations/:id",{id:"@_id"},{update:{method:"PUT"}})}function LocationIndexController(e,n,t){var o=this;o.all=t.query(),console.log("all locations",o.all)}function LocationShowController(e,n,t,o){var r=this;o.get(t.params,function(e){r.location=e,console.log("this location",r.location)})}function NewLocationFormController(e,n,t){function o(){newEventForm.newEvent.activities.push(newEventForm.activities,newEventForm.activities1,newEventForm.activities2),newEventForm.newEvent.substances.push(newEventForm.substances,newEventForm.substances1,newEventForm.substances2);var e=[],o=[];newEventForm.newEvent.whodisliked.forEach(function(n){n&&e.push(n)}),newEventForm.newEvent.wholiked.forEach(function(e){e&&o.push(e)}),newEventForm.newEvent.whodisliked=e,newEventForm.newEvent.wholiked=o,newEventForm.newEvent.positives.split(","),newEventForm.newEvent.negatives.split(","),console.log("split positives",newEventForm.newEvent.positives),console.log("split negatives",newEventForm.newEvent.negatives),console.log("new event",newEventForm.newEvent),t.save(newEventForm.newEvent,function(){n.go("eventIndex")})}var r=this;newEventForm.newEvent={},newEventForm.activities={name:void 0,type:void 0},newEventForm.activities1={name:void 0,type:void 0},newEventForm.activities2={name:void 0,type:void 0},newEventForm.substances={name:void 0,type:void 0},newEventForm.substances1={name:void 0,type:void 0},newEventForm.substances2={name:void 0,type:void 0},newEventForm.newEvent.activities=[],newEventForm.newEvent.substances=[],newEventForm.newEvent.friends=[],newEventForm.newEvent.wholiked=[],newEventForm.newEvent.whodisliked=[],r.submit=o}function MainController(e,n,t,o,r){function i(){e.logout().then(function(){n.go("friendIndex")})}function l(t,o){a.menuVisible=!1,a.message=null,console.log(o,t),!e.isAuthenticated()&&d.includes(o.name)&&(t.preventDefault(),a.message="You must be logged in to go there!",n.go("login"))}function s(){a.menuVisible=!a.menuVisible}var a=this;a.isLoggedIn=e.isAuthenticated,a.message=null,a.menuVisible=!1,o.get({id:e.getPayload()._id},function(e){a.user=e,console.log("current user",a.user)}),a.allFriends=r.query(),a.allEvents=Event.query();var d=[];t.$on("$stateChangeStart",l),a.logout=i,a.toggleMenu=s}function User(e){return new e("/users/:id",{id:"@_id"},{update:{method:"PUT"}})}function UserFormController(e,n,t){function o(){r.user.hobbies.push(r.hobbies),r.user.interests.push(r.interests),r.user.allies=r.allies,r.user.allies=r.enemies,r.user.likes=r.user.likes.split(","),r.user.dislikes=r.user.dislikes.split(",");var e=[],n=[];r.user.allies.forEach(function(n){n&&e.push(n)}),r.user.enemies.forEach(function(e){e&&n.push(e)}),r.user.allies=e,r.user.enemies=n,console.log("data to be saved",r.user,"user object hobbies",r.user.hobbies,"user object interests",r.user.interests,"user object sign",r.user.sign),r.user.$update(function(){console.log("post update your data",r.user),t.go("userShow")})}var r=this;r.hobbies={name:void 0,type:void 0},r.interests={name:void 0,type:void 0},r.sign={asc:void 0,sun:void 0,moon:void 0,mercury:void 0,venus:void 0},r.allies=[],r.enemies=[],r.user=n.get({id:e.getPayload()._id}),r.submit=o}function UserShowController(e,n,t,o){var r=this;o.get({id:e.getPayload()._id},function(e){r.user=e,console.log("showing user",r.user)})}angular.module("FriendManagerApp",["ngAnimate","ngResource","ui.router","satellizer","angular-carousel","chart.js"]).config(Router).config(Auth),Router.$inject=["$stateProvider","$urlRouterProvider"],Auth.$inject=["$authProvider"],angular.module("FriendManagerApp").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state","$window"],LoginController.$inject=["$auth","$state","User"],angular.module("FriendManagerApp").factory("Event",Event),Event.$inject=["$resource"],angular.module("FriendManagerApp").controller("NewEventFormController",NewEventFormController).controller("EventIndexController",EventIndexController).controller("EventShowController",EventShowController),EventIndexController.$inject=["$auth","$state","Event"],EventShowController.$inject=["$auth","User","$state","Event"],NewEventFormController.$inject=["$auth","$state","Event"],angular.module("FriendManagerApp").factory("Friend",Friend),Friend.$inject=["$resource"],angular.module("FriendManagerApp").controller("FriendIndexController",FriendIndexController).controller("FriendShowController",FriendShowController).controller("NewFriendFormController",NewFriendFormController),FriendIndexController.$inject=["$auth","User","$state","Friend"],FriendShowController.$inject=["$auth","User","$state","Friend"],NewFriendFormController.$inject=["$auth","$state","Friend"],angular.module("FriendManagerApp").factory("Location",Location),Location.$inject=["$resource"],angular.module("FriendManagerApp").controller("NewLocationFormController",NewLocationFormController).controller("LocationIndexController",LocationIndexController).controller("LocationShowController",LocationShowController),LocationIndexController.$inject=["$auth","$state","Location"],LocationShowController.$inject=["$auth","User","$state","Location"],NewLocationFormController.$inject=["$auth","$state","Location"],angular.module("FriendManagerApp").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope","User","Friend"],angular.module("FriendManagerApp").factory("User",User),User.$inject=["$resource"],angular.module("FriendManagerApp").controller("UserFormController",UserFormController).controller("UserShowController",UserShowController),UserFormController.$inject=["$auth","User","$state"],UserShowController.$inject=["$auth","$state","$rootScope","User"];
//# sourceMappingURL=app.js.map
